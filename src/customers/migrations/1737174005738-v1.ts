import { MigrationInterface, QueryRunner } from 'typeorm';

export class V11737174005738 implements MigrationInterface {
  name = 'V11737174005738';

  public async up(queryRunner: QueryRunner): Promise<void> {
    await queryRunner.query(
      `CREATE TABLE "plans" ("id" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL, "name" character varying NOT NULL, "description" text NOT NULL, "price" numeric(10,2) NOT NULL, "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "PK_3720521a81c7c24fe9b7202ba61" PRIMARY KEY ("id"))`,
    );
    await queryRunner.query(
      `CREATE TABLE "subscriptions" ("id" integer GENERATED BY DEFAULT AS IDENTITY NOT NULL, "subscription_type" character varying NOT NULL DEFAULT 'MONTHLY', "final_price" numeric(10,2) NOT NULL, "discount" numeric(10,2) NOT NULL, "installments" integer NOT NULL DEFAULT '1', "installment_value" numeric(10,2) NOT NULL, "expires_at" TIMESTAMP, "status" character varying NOT NULL DEFAULT 'PENDING', "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "customer_id" uuid, "plan_id" integer, CONSTRAINT "PK_a87248d73155605cf782be9ee5e" PRIMARY KEY ("id"))`,
    );
    await queryRunner.query(
      `CREATE TABLE "customers" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "name" character varying NOT NULL, "social_name" character varying NOT NULL, "email" character varying NOT NULL, "phone" character varying NOT NULL, "document" character varying NOT NULL, "document_type" character varying NOT NULL DEFAULT 'CPF', "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), CONSTRAINT "UQ_8536b8b85c06969f84f0c098b03" UNIQUE ("email"), CONSTRAINT "UNIQUE_DOCUMENT" UNIQUE ("document", "document_type"), CONSTRAINT "PK_133ec679a801fab5e070f73d3ea" PRIMARY KEY ("id"))`,
    );
    await queryRunner.query(
      `CREATE INDEX "IDX_8536b8b85c06969f84f0c098b0" ON "customers" ("email") `,
    );
    await queryRunner.query(
      `CREATE INDEX "IDX_68c9c024a07c49ad6a2072d23c" ON "customers" ("document") `,
    );
    await queryRunner.query(
      `CREATE TABLE "customer_members" ("id" SERIAL NOT NULL, "status" character varying NOT NULL DEFAULT 'ACTIVE', "created_at" TIMESTAMP NOT NULL DEFAULT now(), "updated_at" TIMESTAMP NOT NULL DEFAULT now(), "customer_id" uuid, "user_id" uuid, CONSTRAINT "PK_8bb71a3207230894f4eeb94f11c" PRIMARY KEY ("id"))`,
    );
    await queryRunner.query(
      `ALTER TABLE "subscriptions" ADD CONSTRAINT "FK_98a4e1e3025f768de1493ecedec" FOREIGN KEY ("customer_id") REFERENCES "customers"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`,
    );
    await queryRunner.query(
      `ALTER TABLE "subscriptions" ADD CONSTRAINT "FK_e45fca5d912c3a2fab512ac25dc" FOREIGN KEY ("plan_id") REFERENCES "plans"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`,
    );
    await queryRunner.query(
      `ALTER TABLE "customer_members" ADD CONSTRAINT "FK_3759f5044345cf942b8c96e6380" FOREIGN KEY ("customer_id") REFERENCES "customers"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`,
    );
    await queryRunner.query(
      `ALTER TABLE "customer_members" ADD CONSTRAINT "FK_a11937b0ad43118da5f621e2c08" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE NO ACTION ON UPDATE NO ACTION`,
    );
  }

  public async down(queryRunner: QueryRunner): Promise<void> {
    await queryRunner.query(
      `ALTER TABLE "customer_members" DROP CONSTRAINT "FK_a11937b0ad43118da5f621e2c08"`,
    );
    await queryRunner.query(
      `ALTER TABLE "customer_members" DROP CONSTRAINT "FK_3759f5044345cf942b8c96e6380"`,
    );
    await queryRunner.query(
      `ALTER TABLE "subscriptions" DROP CONSTRAINT "FK_e45fca5d912c3a2fab512ac25dc"`,
    );
    await queryRunner.query(
      `ALTER TABLE "subscriptions" DROP CONSTRAINT "FK_98a4e1e3025f768de1493ecedec"`,
    );
    await queryRunner.query(`DROP TABLE "customer_members"`);
    await queryRunner.query(
      `DROP INDEX "public"."IDX_68c9c024a07c49ad6a2072d23c"`,
    );
    await queryRunner.query(
      `DROP INDEX "public"."IDX_8536b8b85c06969f84f0c098b0"`,
    );
    await queryRunner.query(`DROP TABLE "customers"`);
    await queryRunner.query(`DROP TABLE "subscriptions"`);
    await queryRunner.query(`DROP TABLE "plans"`);
  }
}
